<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>fbd8f232-db2a-4554-9502-154066295fc8</UserSecretsId>
    <Configurations>Debug;Release;NSwag</Configurations>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FluentValidation.AspNetCore" Version="8.6.1" />
    <PackageReference Include="MediatR" Version="9.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="3.1.1" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="3.1.1" />
    <PackageReference Include="NSwag.AspNetCore" Version="13.2.2" />
    <PackageReference Include="NSwag.MSBuild" Version="13.2.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Serilog" Version="2.10.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="3.2.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\app\services\**" />
    <Compile Remove="ClientApp\src\app\shared\**" />
    <Compile Remove="ClientApp\src\core\**" />
    <Compile Remove="ClientApp\src\shared\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\services\**" />
    <Content Remove="ClientApp\src\app\shared\**" />
    <Content Remove="ClientApp\src\core\**" />
    <Content Remove="ClientApp\src\shared\**" />
    <EmbeddedResource Remove="ClientApp\src\app\services\**" />
    <EmbeddedResource Remove="ClientApp\src\app\shared\**" />
    <EmbeddedResource Remove="ClientApp\src\core\**" />
    <EmbeddedResource Remove="ClientApp\src\shared\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\app\services\**" />
    <None Remove="ClientApp\src\app\shared\**" />
    <None Remove="ClientApp\src\core\**" />
    <None Remove="ClientApp\src\shared\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\core\helpers\error.interceptor.ts" />
    <None Remove="ClientApp\src\tsconfig.app.json" />
    <None Remove="ClientApp\src\tsconfig.server.json" />
    <None Remove="ClientApp\src\tsconfig.spec.json" />
    <None Remove="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\src\tsconfig.app.json" />
    <Content Include="ClientApp\src\tsconfig.server.json" />
    <Content Include="ClientApp\src\tsconfig.spec.json" />
    <Content Include="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\.editorconfig" Link=".editorconfig" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\core\helpers\error.interceptor.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\assets\" />
    <Folder Include="wwwroot\api\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Assignment.Application\Assignment.Application.csproj" />
    <ProjectReference Include="..\Assignment.Domain\Assignment.Domain.csproj" />
    <ProjectReference Include="..\Assignment.Infrastructure\Assignment.Infrastructure.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="wwwroot\api\specification.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

	<!-- This section is used to automatically generate TypeScript HttpClient proxy classes in Debug mode -->
  <Target Name="NSwag" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug'">
    <Copy SourceFiles="@(Reference)" DestinationFolder="$(OutDir)References" />
    <Exec Command="$(NSwagExe_Core30) run nswag.json /variables:Configuration=$(Configuration)" />
    <RemoveDir Directories="$(OutDir)References" />
  </Target>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
